<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Inter&display=swap" rel="stylesheet" />
    <link href="./css/main.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <title>Document</title>
</head>

<body>
    <header>
        <%- include('../layouts/navbar.ejs') %>
    </header>
<div class="filterpage blurred" id="filterPage">
    <div class="filterpagewrap">
        <section class="left">
            <div class="title">
                <h1>H7 Build</h1>
            </div>
            <div class="body">
                <div class="buildimage">
                    <img src="/img/blackCabinet.png" alt="Black Cabinet">
                </div>
                <div class="buildcomponent">
                    <ul class="componentlist">
                        <li class="component firstrow">
                            <button class="componentbtn" id="getChipsets">
                                <img src="/img/v1_139.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Chipset</h6>
                                    <p class="modelname" id="chipset"></p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow" id="getCabinets">
                            <button class="componentbtn">
                                <img src="/img/v1_146.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Case</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow">
                            <button class="componentbtn" id="getCoolings">
                                <img src="/img/v1_167.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Cooling</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow">
                            <button class="componentbtn" id="getMothers">
                                <img src="/img/v1_96.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Motherboards</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow" id="getGpus">
                            <button class="componentbtn">
                                <img src="/img/v1_96.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">GPU</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow">
                            <button class="componentbtn" id="getCpus">
                                <img src="/img/v1_96.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">CPU</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow" id="getPowers">
                            <button class="componentbtn">
                                <img src="/img/v1_96.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Power Supplies</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow" id="getRams">
                            <button class="componentbtn">
                                <img src="/img/v1_96.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Ram</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                        <li class="component notfirstrow">
                            <button class="componentbtn" id="getStorages">
                                <img src="/img/v1_96.png" alt="" class="componentimage">
                                <div class="componenttxt">
                                    <h6 class="componentname">Storage</h6>
                                    <p class="modelname">AMD</p>
                                </div>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </section>
        <section class="right">
            <div class="title">
                <button class="buildconfig activeNav zeroBorder" id="navBase">Base</button>
                <button class="buildconfig zeroBorder" id="navAdd">Add-ons</button>
                <!-- <button class="buildconfig" id="navSumm">Summary</button> -->
            </div>
            <div class="body" id="componentBod">
                <!-- <div class="componentnav">
                    <button class="navleft" id="navLeft">Chipset</button>
                    <button class="navright" id="navRight">Cooling</button>
                </div> -->
                <div id="componentBody">
                    <div class="subtitlefilter">
                        <div class="subtitle">
                            <h3 id="subTitle"></h3>
                        </div>
                        <!-- <div class="filterbutton">
                            <select name="filter" id="">
                                <option selected>All</option>
                                <option>Metal</option>
                                <option>Glass</option>\
                                <option>Suffire</option>
                            </select>
                        </div> -->
                    </div>

                    <div class="modellist">
                        <ul id="modelList">
                            <!-- <div class="modelcard">
                            <div class="cardheader">
                                <img src="/img/v1_139.png" alt="">
                                <div class="modeldetail">
                                    <p>NXZT H510</p>
                                    <p>Mid-Tower</p>
                                </div>
                            </div>
                            <div class="colordetail">Color: <span class="color">Black<span></div>
                            <div class="cardprice">4000</div>
                            <div class="cardbtncont">
                                <button class="cardbtn">iNFO</button>
                                <button class="cardbtn">ADD</button>
                            </div>
                        </div>

                        <div class="modelcard">
                            <div class="cardheader">
                                <img src="/img/v1_282.png" alt="">
                                <div class="modeldetail">
                                    <p>NXZT H510</p>
                                    <p>Mid-Tower</p>
                                </div>
                            </div>
                            <div class="colordetail">Color: <span class="color">Black<span></div>
                            <div class="cardprice">4000</div>
                            <div class="cardbtncont">
                                <button class="cardbtn">INFO</button>
                                <button class="cardbtn">ADD</button>
                            </div>
                        </div> -->
                        </ul>
                    </div>
                </div>
                <div class="body peripheral" id="peripheralBody">
                    <div class="subtitlefilter">
                        <div class="subtitle">
                            <h3 id="subTitle">Peripherals</h3>
                        </div>
                        <!-- <div class="filterbutton">
                            <select name="filter" id="">
                                <option selected>All</option>
                                <option>Metal</option>
                                <option>Glass</option>\
                                <option>Suffire</option>
                            </select>
                        </div> -->
                    </div>
                    <div class="peripheralList" id="">
                        <ul id="peripheralList">
                            <!-- <div class="peripheralCard modelcard">
                            <div class="cardheader">
                                <img src="/img/v1_282.png" alt="">
                                <input type="hidden" name="idlabel" class="idlabel" value="Monitor">
                                <div class="modeldetail">
                                    <p>NXZT H510</p>
                                </div>
                            </div>
                            <div class="colordetail">Color: <span class="color">Black<span></div>
                            <div class="cardprice">4000</div>
                            <div class="cardbtncont">
                                <button class="cardbtn">INFO</button>
                                <button class="cardbtn" id="add">ADD</button>
                            </div>
                        </div> -->
                        </ul>
                    </div>
                </div>

            </div>



    </div>
    </section>
</div>
<div class="footer">
    <div class="billingDetail">
        <div>
            <p>Estimated Shipping <br />
                <sapn class="shippingDate">06/04/2023</sapn>
            </p>
        </div>
        <div>
            <p>Subtotal: <br /><span class="subtotal">2659.91</span></p>
        </div>
    </div>
    <div class="addToCartBtn" id="addPeripheral">
        <button class="cartBtn" id="next">Next</button>
    </div>
    <div class="addToCartBtn" id="addToCartBtn">
        <form method="post" action="/postCart" id="addToCartForm">
            <input type="hidden" name="cart" id="myCartItems">
            <button class="cartBtn" id="next">Add To Cart</button>
        </form>
    </div>
</div>
</div>

<div class="Modal" id="MODAL">
    <div class="modalClose">
        <button class="closeBtn"><span class="fs-3"><i class="bi bi-x-lg"></i></span></button>
    </div>
    <div class="modalBody">
        <h1>Build Your PC</h1>
        <h2>Select your chipset</h2>
        <form method="post" action="/postChipset" id="postChipset">
            <div class="chipsetWrap">
                <div class="chipset">
                    <p>CHIPSET</p>
                    <div class="chipsetButton">
                        <input type="radio" id="amd" name="chipset" value="amd">
                        <label for="amd">AMD</label>
                        <input type="radio" id="intel" name="chipset" value="intel">
                        <label for="intel">Intel</label>
                    </div>
                </div>
            </div>
            <div class="continue">
                <button class="continueBtn" type="submit" id="continueBtn">Continue to Build</button>
            </div>
        </form>
    </div>
</div>

<script>
    var flag = false;
    // Function for cabinet button event listener

    async function removeActive() {
        const buttons = document.querySelectorAll('.componentbtn');

        console.log("Removed");
        await buttons.forEach(button => {
            button.classList.remove('active');
        });
    }

    async function removeAdded() {
        const buttons = document.querySelectorAll('.cardbtn');

        console.log('RemoveAdded')
        await buttons.forEach(button => {
            button.classList.remove('added');
        });
    }

    async function onCabinetBtnClick(event) {
        await fetchData('getCabinets', 'Case');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addCase');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idCase').id;
                cart['Case'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for chipset button event listener
    async function onChipsetBtnClick(event) {
        await fetchData('getChipsets', 'Chipset');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addChipset');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idChipset').id;
                cart['Chipset'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for cpu button event listener
    async function onCpuBtnClick(event) {
        await fetchData('getCpus', 'CPU');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addCPU');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                console.log("Calleddddddddd");
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idCPU').id;
                cart['Cpu'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for gpu button event listener
    async function onGpuBtnClick(event) {
        await fetchData('getgpus', 'GPU');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addGPU');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idGPU').id;
                cart['Gpu'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for mother button event listener
    async function onMotherBtnClick(event) {
        await fetchData('getMothers', 'Motherboard');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addMotherboard');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idMotherboard').id;
                cart['Mother'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for ram button event listener
    async function onRamBtnClick(event) {
        await fetchData('getRams', 'RAM');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addRAM');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idRAM').id;
                cart['Ram'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for storage button event listener
    async function onStorageBtnClick(event) {
        await fetchData('getStorages', 'Storage');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addStorage');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idStorage').id;
                cart['Storage'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for cooling button event listener
    async function onCoolingBtnClick(event) {
        await fetchData('getCoolings', 'Cooling');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addCooling');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idCooling').id;
                cart['Cooling'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Function for power button event listener
    async function onPowerBtnClick(event) {
        await fetchData('getPowers', 'Power Supply');

        removeActive();
        event.target.classList.add('active');

        const addCompBTN = document.querySelectorAll('.addPower');
        const addBtnn = document.getElementById('add');

        addCompBTN.forEach(button => {
            button.addEventListener('click', (event) => {
                removeAdded();
                event.target.classList.add('added');
                const CompID = event.target.closest('.modelcard').querySelector('.idPower').id;
                cart['Power'] = CompID;
                console.log("Cart: ", cart);
            });
        });
    }

    // Add event listener for each button
    document.getElementById('getCabinets').addEventListener('click', onCabinetBtnClick);
    document.getElementById('getChipsets').addEventListener('click', onChipsetBtnClick);
    document.getElementById('getCpus').addEventListener('click', onCpuBtnClick);
    document.getElementById('getGpus').addEventListener('click', onGpuBtnClick);
    document.getElementById('getMothers').addEventListener('click', onMotherBtnClick);
    document.getElementById('getRams').addEventListener('click', onRamBtnClick);
    document.getElementById('getStorages').addEventListener('click', onStorageBtnClick);
    document.getElementById('getCoolings').addEventListener('click', onCoolingBtnClick);
    document.getElementById('getPowers').addEventListener('click', onPowerBtnClick);


    async function fetchData(btn, label) {
        var url = 'http://localhost:3000/' + btn + '?' + chipset;
        console.log("URL: ", url);
        console.log(label);
        if (label === 'Power Supply') {
            label = label.slice(0, 5);
            console.log("After IF: ", label);
        }
        try {
            const response = await fetch(url);
            const data = await response.json();

            var body = document.getElementById('componentBody');

            var List = document.getElementById('modelList');
            List.innerHTML = '';
            var subTitle = document.getElementById('subTitle');
            subTitle.innerText = label;





            console.log("data", data);

            data.forEach(element => {

                //Make A card for each Component
                const id = document.createElement('input');
                id.type = "hidden";
                id.name = "id" + label;
                id.classList.add('id' + label)
                keys = Object.keys(element);
                key = keys[0];
                id.value = element[key];
                id.id = element[key];


                const card = document.createElement('div');
                card.classList.add('modelcard');

                const cardHeader = document.createElement('div');
                cardHeader.classList.add('cardheader');

                const img = document.createElement('img');
                img.setAttribute('src', element.ImageURL);
                img.setAttribute('alt', element.Name);
                cardHeader.appendChild(img);
                cardHeader.appendChild(id);

                const modelDetail = document.createElement('div');
                modelDetail.classList.add('modeldetail');

                const modelName = document.createElement('p');
                modelName.textContent = element.Name;
                modelDetail.appendChild(modelName);

                const modelType = document.createElement('p');
                modelType.textContent = 'Mid-Tower';
                modelDetail.appendChild(modelType);

                cardHeader.appendChild(modelDetail);
                card.appendChild(cardHeader);

                const colorDetail = document.createElement('div');
                colorDetail.classList.add('colordetail');

                const colorText = document.createTextNode('Color: ');
                colorDetail.appendChild(colorText);

                const colorSpan = document.createElement('span');
                colorSpan.classList.add('color');
                colorSpan.textContent = 'Black';
                colorDetail.appendChild(colorSpan);

                card.appendChild(colorDetail);

                const cardPrice = document.createElement('div');
                cardPrice.classList.add('cardprice');
                cardPrice.textContent = element.Price;
                card.appendChild(cardPrice);

                const cardBtnCont = document.createElement('div');
                cardBtnCont.classList.add('cardbtncont');

                const infoBtn = document.createElement('button');
                infoBtn.classList.add('cardbtn');
                infoBtn.textContent = 'INFO';
                cardBtnCont.appendChild(infoBtn);

                if (label === 'Chipset') {
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/postChipset'
                    form.id = 'postChipset';


                    const addBtn = document.createElement('button');
                    addBtn.classList.add('cardbtn');
                    addBtn.classList.add('add' + label);
                    addBtn.id = "addChip";
                    addBtn.textContent = 'ADD';
                    addBtn.type = 'submit';
                    cardBtnCont.appendChild(addBtn);

                    const inputChip = document.createElement('input');
                    inputChip.type = 'hidden';
                    inputChip.name = 'chipset';
                    inputChip.value = element.Name;
                    cardBtnCont.appendChild(inputChip);
                    cardBtnCont.appendChild(form);
                    form.appendChild(addBtn);
                    form.appendChild(inputChip);

                    console.log("Form Called");
                } else {
                    const addBtn = document.createElement('button');
                    addBtn.classList.add('cardbtn');
                    addBtn.classList.add('add' + label);
                    addBtn.id = "add";
                    addBtn.textContent = 'ADD';
                    cardBtnCont.appendChild(addBtn);
                }


                card.appendChild(cardBtnCont);

                List.appendChild(card);

                flag = true;
            });
        } catch (error) {
            console.log(error);
        }
    }



    let cart = {
        Chipset: null,
        Case: null,
        Cooling: null,
        Mother: null,
        Gpu: null,
        Cpu: null,
        Power: null,
        Ram: null,
        Storage: null,
        Monitor: null,
        Keyboard: null,
        Mouse: null
    }





    //Modal Code
    const urlParams = new URLSearchParams(window.location.search);
    const Modal = urlParams.get('modal');

    const filter = document.getElementById('filterPage');

    if (Modal == 'hidden') {
        const modal = document.querySelector('.Modal');
        modal.style.display = 'none';
        filter.classList.remove('blurred');
    } else {
        const modal = document.querySelector('.Modal');
        const mainPage = document.querySelector('body');
        const cont = document.getElementById('continueBtn');
        const form = document.getElementById('postChipset');

        modal.style.display = 'block';


        form.addEventListener('submit', (event) => {
            event.preventDefault;

            modal.style.display = 'none';
        });
    }
    //END

    //PostChipset Code
    const chipset = urlParams.get('chipset');

    if (chipset != null) {
        const p = document.getElementById('chipset');
        p.innerText = chipset.toUpperCase();
    }

    //END

    //PostBuild Code
    const nextBtn = document.getElementById('next');
    const compBody = document.getElementById('componentBody');
    const peripheralBody = document.getElementById('peripheralBody');
    const addCartBtn = document.getElementById('addToCartBtn');


    nextBtn.addEventListener('click', showPeripheral);

    async function showPeripheral(event) {
        console.log("showPeripheral");
        compBody.style.display = 'none';
        peripheralBody.style.display = 'block';

        addOn.classList.add('activeNav');
        base.classList.remove('activeNav')
        nextBtn.style.display = 'none';
        addCartBtn.style.display = 'block';

        try {
            const url = 'http://localhost:3000/getPeripherals';
            const res = await fetch(url);
            const PeriData = await res.json();
            console.log(PeriData)
            const periList = document.getElementById('peripheralList');
            periList.innerHTML = '';

            await PeriData.forEach(element => {
                console.log("Inside Loop")
                const card = document.createElement('div');
                card.classList.add('peripheralCard', 'modelcard');

                const cardHeader = document.createElement('div');
                cardHeader.classList.add('cardheader');

                const img = document.createElement('img');
                img.setAttribute('src', element.image_url);
                img.setAttribute('alt', '');
                cardHeader.appendChild(img);

                const id = document.createElement('input');
                id.type = 'hidden';
                id.name = 'idPeripheral';
                id.classList.add('idPeripheral');
                id.value = element.idPeripheral;

                const modelDetail = document.createElement('div');
                modelDetail.classList.add('modeldetail');

                const modelName = document.createElement('p');
                modelName.textContent = element.name;
                modelDetail.appendChild(modelName);

                const catType = document.createElement('p');
                catType.classList.add('label');
                console.log("category: ", element.name);
                catType.textContent = element.category;
                modelDetail.appendChild(catType);

                cardHeader.appendChild(modelDetail);
                cardHeader.appendChild(id);
                card.appendChild(cardHeader);

                const colorDetail = document.createElement('div');
                colorDetail.classList.add('colordetail');

                const colorText = document.createTextNode('Color: ');
                colorDetail.appendChild(colorText);

                const colorSpan = document.createElement('span');
                colorSpan.classList.add('color');
                colorSpan.textContent = element.Color;
                colorDetail.appendChild(colorSpan);

                card.appendChild(colorDetail);

                const cardPrice = document.createElement('div');
                cardPrice.classList.add('cardprice');
                cardPrice.textContent = element.price;
                card.appendChild(cardPrice);

                const cardBtnCont = document.createElement('div');
                cardBtnCont.classList.add('cardbtncont');

                const infoBtn = document.createElement('button');
                infoBtn.classList.add('cardbtn');
                infoBtn.textContent = 'INFO';
                cardBtnCont.appendChild(infoBtn);

                const addBtn = document.createElement('button');
                addBtn.classList.add('cardbtn');
                addBtn.classList.add('addPeripheral');
                addBtn.id = 'add';
                addBtn.textContent = 'ADD';
                cardBtnCont.appendChild(addBtn);

                card.appendChild(cardBtnCont);
                periList.appendChild(card);

            });
            const addCompBTN = document.querySelectorAll('.addPeripheral');

            addCompBTN.forEach(button => {
                button.addEventListener('click', (event) => {
                    const periID = event.target.closest('.peripheralCard').querySelector('.idPeripheral').value;
                    const p = event.target.closest('.peripheralCard').querySelector('.label');
                    cart[p.innerText] = periID;
                    console.log("Cart: ", cart);
                });
            });
        } catch (error) {
            (
                console.log("Peripheral Fetch: ", error));
        }


    }

    function showComponent() {
        console.log("showComponent");
        peripheralBody.style.display = 'none';
        compBody.style.display = 'block';

        addOn.classList.remove('activeNav');
        base.classList.add('activeNav');

        nextBtn.style.display = 'block';
        addCartBtn.style.display = 'none';
    }
    //END

    //NAVButton Code

    const base = document.getElementById('navBase');
    const addOn = document.getElementById('navAdd');


    base.addEventListener('click', showComponent);

    addOn.addEventListener('click', showPeripheral);

    //END

    document.querySelector('#addToCartForm').addEventListener('submit', () => {
        const myCartItems = document.getElementById('myCartItems');
        myCartItems.value = JSON.stringify(cart);
    })






</script>
</body>

</html>